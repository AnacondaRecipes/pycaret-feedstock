{% set name = "pycaret" %}
{% set version = "3.3.2" %}

package:
  name: {{ name|lower }}-suite
  version: {{ version }}

source:
  url: https://github.com/{{ name }}/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
  sha256: aa89ed0a5795e05200e0e3d44ec3ee96bfea499d5db2df5e37ce903a5bff6ace

build:
  number: 0
  # RuntimeError: ('Pycaret only supports python 3.9, 3.10, 3.11. Your actual Python version: ', sys.version_info(major=3, minor=12, micro=9, releaselevel='final', serial=0), 'Please DOWNGRADE your Python version.')
  skip: true  # [py<39 or py>311]

requirements:
  host:
    - python
    - numpy >=1.21, <1.27
    - pip
    - setuptools
    - wheel

outputs:
  - name: {{ name }}
    build:
      skip: true  # [py<39]
      script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv
    requirements:
      host:
        - python
        - numpy >=1.21, <1.27
        - pip
        - setuptools
        - wheel
      run:
        - python
        # Base
        - ipython >=5.5.0
        - ipywidgets >=7.6.5
        - tqdm >=4.62.0
        - numpy >=1.21, <1.27
        - pandas >=1.3.0,<2.2.0
        - jinja2 >=3
        - scipy >=1.6.1,<1.11.4
        - joblib >=1.2.0,<1.4
        - scikit-learn >1.4.0
        - pyod >=1.1.3
        - imbalanced-learn >=0.12.0
        - category_encoders >=2.4.0
        - lightgbm >=3.0.0
        - numba >=0.55.0
        - requests >=2.27.1
        - psutil >=5.9.0
        - markupsafe >=2.0.1
        - importlib_metadata >=4.12.0
        - nbformat >=4.2.0
        - cloudpickle
        - deprecation >=2.1.0
        - python-xxhash
        - wurlitzer  # [not win]
        # Plotting
        - matplotlib-base >=3.3.0,<3.8.0
        - scikit-plot >=0.3.7
        - yellowbrick >=1.4
        - plotly >=5.14.0
        - kaleido-core >=0.2.1
        - schemdraw ==0.15
        - plotly-resampler >=0.8.3.1
        # Time-series
        - statsmodels >=0.12.1
        - sktime ==0.26.0
        - tbats >=1.1.3
        - pmdarima >=2.0.4
    test:
      imports:
        - pycaret

  - name: {{ name }}-models
    build:
      skip: true  # [py<39]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('pycaret', exact=True) }}
        # Models
        - xgboost >=1.1.0  # [(not py311) or (not win)]
        - catboost >=0.23.2
        # - catboost >=0.23.2,<1.2  # [osx]
        - kmodes >=0.11.1
        - mlxtend >=0.19.0
        - statsforecast >=0.5.5,<1.6.0
        - scikit-learn-intelex >=2023.0.1  # [x86_64]
    test:
      imports:
        - pycaret

  - name: {{ name }}-parallel
    build:
      skip: true  # [py<39]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('pycaret', exact=True) }}
        # Parallel
        # Putting upper bound because:
        # AttributeError: module 'dask.dataframe.core' has no attribute 'DataFrame'
        # in >=2025
        - dask >=2024.4.1,<2025
        - distributed >=2024.4.1,<2025
        - fugue >=0.8.0
        - flask >=2.0.3
        - werkzeug >=2.2,<3.0
    test:
      imports:
        - pycaret

  - name: {{ name }}-full
    build:
      # Until all of the pycaret-* packages are available in defaults, skipping the pycaret-full metapackage.
      skip: true
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage('pycaret', exact=True) }}
        - {{ pin_subpackage('pycaret-analysis', exact=True) }}
        - {{ pin_subpackage('pycaret-models', exact=True) }}
        - {{ pin_subpackage('pycaret-tuners', exact=True) }}
        - {{ pin_subpackage('pycaret-parallel', exact=True) }}
    test:
      imports:
        # dummy test; actual tests are in subpackages
        - pycaret
  
  - name: {{ name }}-analysis
    build:
      # missing shap, explainerdashboard, fairlearn
      skip: true
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('pycaret', exact=True) }}
        # Analysis
        - shap >=0.44.0,==0.44.*
        - interpret >=0.2.7
        - umap-learn >=0.5.2
        - pyyaml
        - ydata-profiling >=4.3.1
        - explainerdashboard >=0.3.8  # For dashboard method
        - fairlearn ==0.7.0  # For check_fairness method
    test:
      imports:
        - pycaret

  - name: {{ name }}-tuners
    build:
      # missing optuna-integration
      skip: true
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('pycaret', exact=True) }}
        # Tuners
        - tune-sklearn >=0.2.1  # [(not py311) and (not win)]
        - ray-tune >=1.0.0  # [(not py311) and (not win)]
        - hyperopt >=0.2.7
        - optuna >=3.0.0
        - optuna-integration
        - scikit-optimize >=0.9.0
    test:
      imports:
        - pycaret

  - name: {{ name }}-mlops
    build:
      # missing evidently
      skip: true
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('pycaret', exact=True) }}
        # MLOps
        # https://github.com/pycaret/pycaret/issues/4100
        - mlflow >=2.0.0,<=2.16.0
        - gradio >=3.50.2
        - boto3 >=1.24.56  # For deploy_model method
        - fastapi >=0.75.0  # For web api
        - uvicorn >=0.17.6  # For web api
        - m2cgen >=0.9.0  # For model conversion
        - evidently >=0.4.16,==0.4.*  # for drift reporting
    test:
      imports:
        - pycaret

    {% set tests_to_skip = "" %}
    # Interactive tests
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_regression_plots.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_anomaly.py" %}
    # Missing fairlearn
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_check_fairness.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_create_api.py" %}
    # Missing deps from pycaret-mlops
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_convert_model.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_create_docker.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_check_drift.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_clustering.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_classification_engines.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_classification_plots.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_classification.py" %}
    {% set tests_to_skip = tests_to_skip + " --ignore=tests/test_classification_parallel.py" %}

  # Testing all the subpackages together as the upstream does not seperate the tests
  # between core functionalities and extras
  - name: {{ name }}-tests
    build:
      # Uncomment the skip before merging to not produce unnecessary package
      # skip: true
    requirements:
      host:
        - python
      run:
        - {{ pin_subpackage('pycaret', exact=True) }}
        - {{ pin_subpackage('pycaret-models', exact=True) }}
        - {{ pin_subpackage('pycaret-parallel', exact=True) }}
    test:
      source_files:
        - tests
      imports:
        - pycaret
      requires:
        # Some requirements have to be here for conftest.py, even tho the extras requiring them are not supported
        - pytest >=7.0.1,<8.0.0
        - moto >=3.0.7,<5.0.0
        - dash
        # https://github.com/pycaret/pycaret/issues/4100
        - mlflow >=2.0.0,<=2.16.0
        - daal4py  #[x86_64]
        - scikit-learn-intelex  #[x86_64]
      commands:
        - export USE_DAAL4PY_SKLEARN=1  # [unix]
        - SET USE_DAAL4PY_SKLEARN=1     # [win]
        # Disable pip check because of errors:
        # pycaret 3.3.2 requires kaleido, which is not installed. (using kaleido-core)
        # - pip check
        # Listing every test as running them together crashes
        #  most likely due to OOM
        - pytest -vv tests/test_time_series_parallel.py
        - pytest -vv tests/test_time_series_utils.py
        - pytest -vv tests/test_probability_threshold.py
        - pytest -vv tests/test_time_series_tune_random.py
        - pytest -vv tests/test_tune_model.py
        - pytest -vv tests/test_time_series_utils_forecasting_pipeline.py
        - pytest -vv tests/test_time_series_tune_grid.py
        - pytest -vv tests/test_time_series_tune_base.py
        - pytest -vv tests/test_overflow.py
        - pytest -vv tests/test_create_app.py
        - pytest -vv tests/test_time_series_utils_forecasting.py
        - pytest -vv tests/test_time_series_metrics.py
        - pytest -vv tests/test_datasets.py
        - pytest -vv tests/test_time_series_exogenous.py
        - pytest -vv tests/test_optimize_threshold.py
        - pytest -vv tests/test_memory.py
        - pytest -vv tests/test_time_series_models.py
        - pytest -vv tests/test_utils_datetime.py
        - pytest -vv tests/test_utils.py
        - pytest -vv tests/test_time_series_mlflow.py
        - pytest -vv tests/test_time_series_plots.py
        - pytest -vv tests/test_persistence_experiment.py
        - pytest -vv tests/test_classification_tuning.py
        - pytest -vv tests/test_regression_tuning.py
        - pytest -vv tests/test_dashboard.py
        - pytest -vv tests/test_multiclass.py
        - pytest -vv tests/test_time_series_indices.py
        - pytest -vv tests/test_time_series_base.py
        - pytest -vv tests/test_time_series_utils_plots.py
        - pytest -vv tests/test_preprocess.py
        - pytest -vv tests/test_regression.py
        - pytest -vv tests/test_models.py
        - pytest -vv tests/test_time_series_feat_eng.py
        - pytest -vv tests/test_time_series_stats.py
        - pytest -vv tests/test_time_series_engines.py
        - pytest -vv tests/test_clustering_engines.py
        - pytest -vv tests/test_supervised_predict_model.py
        - pytest -vv tests/test_pipeline.py
        - pytest -vv tests/test_time_series_preprocess.py
        - pytest -vv tests/test_time_series_blending.py
        - pytest -vv tests/test_persistence.py
        - pytest -vv tests/test_regression_parallel.py
        # daal4py only available for x86_64
        - pytest -vv tests/test_regression_engines.py  # [x86_64]
        # Interactive tests
        # - pytest -vv tests/test_regression_plots.py
        # - pytest -vv tests/test_anomaly.py
        # Missing fairlearn
        # - pytest -vv tests/test_check_fairness.py
        # - pytest -vv tests/test_create_api.py
        # Missing deps from pycaret-mlops
        # - pytest -vv tests/test_classification_parallel.py
        # - pytest -vv tests/test_convert_model.py
        # - pytest -vv tests/test_create_docker.py
        # - pytest -vv tests/test_check_drift.py
        # - pytest -vv tests/test_clustering.py
        # - pytest -vv tests/test_classification_engines.py
        # - pytest -vv tests/test_classification_plots.py
        # - pytest -vv tests/test_classification.py
        # Performance test, negligible differences
        # assert (32.76628173503559 < 32.55898448696826 or 0.2072972480673343 < 0.2)
        # - pytest -vv tests/benchmarks/test_memory_performance.py
        # Empty file
        # - pytest -vv tests/test_mlflow_artifacts.py
        # Tests downloading data (not available on CI)
        # - pytest -vv tests/benchmarks/test_time_series_sp_detection.py

about:
  home: https://github.com/pycaret/pycaret
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: PyCaret - An open source, low-code machine learning library in Python.
  description: PyCaret - An open source, low-code machine learning library in Python.
  doc_url: https://pycaret.readthedocs.io
  dev_url: https://github.com/pycaret/pycaret

extra:
  recipe-maintainers:
    - melonhead901
    - mpaulonis
  skip-lints:
    - wrong_output_script_key
    - invalid_url
